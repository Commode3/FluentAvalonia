name: Publish NuGet Package

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOTNET_INSTALL_DIR: '~/.dotnet'
  MAIN_CSPROJ: './src/FluentAvalonia/FluentAvalonia.csproj'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute short HEAD SHA
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Compute package version suffix
        run: |
          readonly PACKAGE_VERSION_SUFFIX="${{ env.SHORT_SHA }}"
          echo "PACKAGE_VERSION_SUFFIX=$PACKAGE_VERSION_SUFFIX" >> $GITHUB_ENV
          echo "The package version suffix is '$PACKAGE_VERSION_SUFFIX'"
      
      - name: Cache dotnet
        id: cache-dotnet
        uses: actions/cache@v3
        with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-7
          restore-keys: ${{ runner.os }}-dotnet-7
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set installed/cached dotnet path [${{ env.DOTNET_INSTALL_DIR }}]
        run: echo "${{ env.DOTNET_INSTALL_DIR }}" >> $GITHUB_PATH

      - name: Check installed/cached dotnet version
        run: dotnet --version

      - name: Restore dependencies
        run: dotnet restore "${{ env.MAIN_CSPROJ }}" 

      - name: Build project
        run: |
          dotnet build "${{ env.MAIN_CSPROJ }}" \
            /p:NoWarn=CS1591
            --configuration Release \
            --no-restore

      - name: Pack project into NuGet package
        run: |
          dotnet pack "${{ env.MAIN_CSPROJ }}" \
            /p:Name=Redcft.FluentAvalonia \
            /p:VersionSuffix=${{ env.PACKAGE_VERSION_SUFFIX }} \
            --configuration Release \
            --no-build \
            --output ./nupkgs
      
      - name: Publish NuGet package to GitHub Packages
        run: dotnet nuget push ./nupkgs/*.nupkg --timeout 60
